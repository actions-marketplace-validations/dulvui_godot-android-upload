
name: 'Godot Engine: Export to Android and release to Google Play Store'

inputs:
  working-directory:
    description: 'The working directory'
    required: false
    default: '.'
  godot-version:
    description: 'Godot Engine version'
    required: false
    default: '3.5'
  export-preset-cfg:
    description: 'Check README how to create a valid export_presets.cfg'
    required: true
  release-signing-key-base64:
    description: 'Your release signing key as base 64'
    required: true
  debug-signing-key-base64:
    description: 'Your debug signing key as base 64. It is mandatory to export'
    required: true
  version-code:
    description: 'Version code like 68'
    required: true
  version-name:
    description: 'Version name like 4.0.2'
    required: true
  service-account-json:
    description: 'Path to a valid Google service-account.json'
    required: true
  package-name:
    description: 'Android package name'
    required: true
  release-file:
    description: 'Path to the apk/aab file'
    required: true
  release-track:
    description: 'Release track: production, beta, alpha, internalsharing, internal'
    required: false
    default: 'internal'

  
runs:
  using: "composite"
  steps:
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 11

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2


    - name: Cache Godot files
      id: cache-godot
      uses: actions/cache@v3
      with:
        path: |
          ~/.local/share/godot/
          /usr/local/bin/godot
          ~/.cache/
          ~/.config/godot/
        key: ${{ runner.os }}-godot

    - name: Download and config Godot Engine headless linux server and templates
      if: steps.cache-godot.outputs.cache-hit != 'true'
      shell: bash
      run: |
        wget -q https://downloads.tuxfamily.org/godotengine/${{ inputs.godot-version }}/Godot_v${{ inputs.godot-version }}-stable_linux_headless.64.zip
        wget -q https://downloads.tuxfamily.org/godotengine/${{ inputs.godot-version }}/Godot_v${{ inputs.godot-version }}-stable_export_templates.tpz
        mkdir ~/.cache
        mkdir -p ~/.config/godot
        mkdir -p ~/.local/share/godot/templates/${{ inputs.godot-version }}.stable
        unzip Godot_v${{ inputs.godot-version }}-stable_linux_headless.64.zip
        mv Godot_v${{ inputs.godot-version }}-stable_linux_headless.64 /usr/local/bin/godot
        unzip Godot_v${{ inputs.godot-version }}-stable_export_templates.tpz
        mv templates/* ~/.local/share/godot/templates/${{ inputs.godot-version }}.stable
        rm -f Godot_v${{ inputs.godot-version }}-stable_linux_headless.64.zip Godot_v${{ inputs.godot-version }}-stable_export_templates.tpz
        godot -e -q

    - name: Set Android SDK path in Godot Editor settings
      if: steps.cache-godot.outputs.cache-hit != 'true'
      shell: bash
      env:
        SETTINGS: |
          export/android/android_sdk_path = "/usr/local/lib/android/sdk"
          export/android/shutdown_adb_on_exit = true
          export/android/force_system_user = false
      run: echo "$SETTINGS" >> ~/.config/godot/editor_settings-3.tres

    - name: Create service-account.json
      shell: bash
      run: echo ${{ inputs.service-account-json }} > service-account.json

    - name: Create export_presets.cfg
      shell: bash
      run: echo "${{ inputs.export-preset-cfg }}" > ${{ inputs.working-directory }}/export_presets.cfg

    - name: Create release keystore
      shell: bash
      run: echo "${{ inputs.release-signing-key-base64 }}" | base64 --decode > keystore.keystore

    - name: Generate debug keystore
      shell: bash
      run: echo "${{ inputs.debug-signing-key-base64 }}" | base64 --decode > debug.keystore

    - name: Replace keystore path in export_presets.cfg
      shell: bash
      run: sed -i "s|KEYSTORE_PATH|$GITHUB_WORKSPACE/keystore.keystore|g" ${{ inputs.working-directory }}/export_presets.cfg

    - name: Add version to export_presets.cfg
      shell: bash
      run: |
        sed -i "s|VERSION_CODE|${{ inputs.version-code }}|g" ${{ inputs.working-directory }}/export_presets.cfg
        sed -i "s|VERSION_NAME|${{ inputs.version-name }}|g" ${{ inputs.working-directory }}/export_presets.cfg

    - name: Export
      shell: bash
      run: godot --path ${{ inputs.working-directory }} --export Android

    - name: Publish to Play Store
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJson: service-account.json
        packageName: ${{ inputs.package-name }}
        releaseFiles: ${{ inputs.release-file }}
        track: ${{ inputs.release-track }}
        status: completed